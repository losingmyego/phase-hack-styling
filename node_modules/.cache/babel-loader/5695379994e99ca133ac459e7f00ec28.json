{"ast":null,"code":"import _regeneratorRuntime from\"/Users/losingmyego/Downloads/phase-metabolism-hack-functions/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"/Users/losingmyego/Downloads/phase-metabolism-hack-functions/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/Users/losingmyego/Downloads/phase-metabolism-hack-functions/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _require=require('./utils/init.js'),phase=_require.phase;var _require2=require('ethers'),ethers=_require2.ethers;// Returns promise that resolves to metadata object\nfunction displayPhase(_x){return _displayPhase.apply(this,arguments);}function _displayPhase(){_displayPhase=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(address){var profile_address,_yield$phase$viewProf,_yield$phase$viewProf2,username,avatar,bio,banner,links,metadata,attributes,title,url;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return phase.phase(address);case 3:profile_address=_context.sent;if(!(profile_address==ethers.constants.AddressZero)){_context.next=6;break;}return _context.abrupt(\"return\",\"Phase Doesn't Exist!\");case 6:_context.next=8;return phase.viewProfile(address);case 8:_yield$phase$viewProf=_context.sent;_yield$phase$viewProf2=_slicedToArray(_yield$phase$viewProf,4);username=_yield$phase$viewProf2[0];avatar=_yield$phase$viewProf2[1];bio=_yield$phase$viewProf2[2];banner=_yield$phase$viewProf2[3];_context.next=16;return phase.viewLinks(address);case 16:links=_context.sent;// Build metadata\nmetadata={name:username,image:avatar,description:bio};// Set banner as top attribute\nattributes=[{\"trait_type\":\"Banner\",\"value\":banner}];// Set links as attributes\nlinks.forEach(function(link){var _link=_slicedToArray(link,2);title=_link[0];url=_link[1];attributes.push({\"trait_type\":title,\"value\":url});});// Add attributes to metadata\nmetadata.attributes=attributes;return _context.abrupt(\"return\",metadata);case 24:_context.prev=24;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 27:case\"end\":return _context.stop();}}},_callee,null,[[0,24]]);}));return _displayPhase.apply(this,arguments);}exports.displayPhase=displayPhase;","map":{"version":3,"names":["require","phase","ethers","displayPhase","address","profile_address","constants","AddressZero","viewProfile","username","avatar","bio","banner","viewLinks","links","metadata","name","image","description","attributes","forEach","link","title","url","push","console","log","exports"],"sources":["/Users/losingmyego/Downloads/phase-metabolism-hack-functions/src/Phase/displayPhase.js"],"sourcesContent":["const { phase } = require('./utils/init.js')\nconst { ethers } = require('ethers')\n\n// Returns promise that resolves to metadata object\nasync function displayPhase(address) {\n\n    try {\n\n        let profile_address = await phase.phase(address)\n\n        //  Require profile_address == zero address\n        if (profile_address == ethers.constants.AddressZero) {\n            return \"Phase Doesn't Exist!\"\n        }\n\n        // Set array items to variables\n        let [username, avatar, bio, banner] = await phase.viewProfile(address)\n\n        let links = await phase.viewLinks(address)\n\n        // Build metadata\n        let metadata = {\n            name : username,\n            image : avatar,\n            description : bio\n        }\n\n        // Set banner as top attribute\n        let attributes = [ { \"trait_type\": \"Banner\", \"value\": banner } ]\n\n        // Set links as attributes\n        let title, url\n        links.forEach(link => {\n            [title, url] = link\n            attributes.push({ \"trait_type\": title, \"value\": url })\n        })\n\n        // Add attributes to metadata\n        metadata.attributes = attributes\n        \n        return metadata\n\n    } catch (error) {\n        console.log(error)\n    }\n    \n}\n\nexports.displayPhase = displayPhase"],"mappings":"scAAA,aAAkBA,OAAO,CAAC,iBAAD,CAAzB,CAAQC,KAAR,UAAQA,KAAR,CACA,cAAmBD,OAAO,CAAC,QAAD,CAA1B,CAAQE,MAAR,WAAQA,MAAR,CAEA;QACeC,a,kJAAf,iBAA4BC,OAA5B,0RAIoCH,MAAK,CAACA,KAAN,CAAYG,OAAZ,CAJpC,QAIYC,eAJZ,oBAOYA,eAAe,EAAIH,MAAM,CAACI,SAAP,CAAiBC,WAPhD,0DAQmB,sBARnB,+BAYoDN,MAAK,CAACO,WAAN,CAAkBJ,OAAlB,CAZpD,2GAYaK,QAZb,2BAYuBC,MAZvB,2BAY+BC,GAZ/B,2BAYoCC,MAZpC,kDAc0BX,MAAK,CAACY,SAAN,CAAgBT,OAAhB,CAd1B,SAcYU,KAdZ,eAgBQ;AACIC,QAjBZ,CAiBuB,CACXC,IAAI,CAAGP,QADI,CAEXQ,KAAK,CAAGP,MAFG,CAGXQ,WAAW,CAAGP,GAHH,CAjBvB,CAuBQ;AACIQ,UAxBZ,CAwByB,CAAE,CAAE,aAAc,QAAhB,CAA0B,QAASP,MAAnC,CAAF,CAxBzB,CA0BQ;AAEAE,KAAK,CAACM,OAAN,CAAc,SAAAC,IAAI,CAAI,0BACHA,IADG,IACjBC,KADiB,UACVC,GADU,UAElBJ,UAAU,CAACK,IAAX,CAAgB,CAAE,aAAcF,KAAhB,CAAuB,QAASC,GAAhC,CAAhB,EACH,CAHD,EAKA;AACAR,QAAQ,CAACI,UAAT,CAAsBA,UAAtB,CAlCR,gCAoCeJ,QApCf,4DAuCQU,OAAO,CAACC,GAAR,cAvCR,qE,+CA4CAC,OAAO,CAACxB,YAAR,CAAuBA,YAAvB"},"metadata":{},"sourceType":"module"}