{"ast":null,"code":"const {\n  phase\n} = require('./utils/init.js');\n\nconst {\n  ethers\n} = require('ethers'); /// TEST ARGS HELLO\n\n\nlet username = 'Rite';\nlet avatar = 'https://64.media.tumblr.com/6b422dc93e53d8d54939021650e3c117/tumblr_pwiyi4VAM21qaxphpo1_1280.jpg';\nlet banner = 'https://ih1.redbubble.net/image.382904608.9559/flat,1000x1000,075,f.u1.jpg';\nlet bio = 'Blockchain Dev';\nlet links = [['Website', 'http://autocrat.xyz'], ['GitHub', 'https://github.com/ryansea']]; /// @param links e.g. [ [ 'Twitter', 'https://twitter.com/enndsz' ],[ 'GitHub', 'https://github.com/ryansea' ] ]\n\nasync function createPhase(address, username, avatar, banner, bio, links) {\n  try {\n    // Get address of phase for user (should be zero address)\n    let profile_address = await phase.phase(address); //  Require profile_address == zero address\n\n    if (profile_address !== ethers.constants.AddressZero) {\n      return 'Phase Already Made!';\n    } // Create profile\n\n\n    let tx = await phase.createProfile(address, username, avatar, banner, bio, links);\n    return tx;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexports.createPhase = createPhase;","map":{"version":3,"names":["phase","require","ethers","username","avatar","banner","bio","links","createPhase","address","profile_address","constants","AddressZero","tx","createProfile","error","console","log","exports"],"sources":["/Users/losingmyego/Downloads/phase-metabolism-hack-functions/src/Phase/createPhase.js"],"sourcesContent":["const { phase } = require('./utils/init.js')\nconst { ethers } = require('ethers')\n\n/// TEST ARGS HELLO\nlet username = 'Rite'\nlet avatar =\n  'https://64.media.tumblr.com/6b422dc93e53d8d54939021650e3c117/tumblr_pwiyi4VAM21qaxphpo1_1280.jpg'\nlet banner =\n  'https://ih1.redbubble.net/image.382904608.9559/flat,1000x1000,075,f.u1.jpg'\nlet bio = 'Blockchain Dev'\nlet links = [\n  ['Website', 'http://autocrat.xyz'],\n  ['GitHub', 'https://github.com/ryansea'],\n]\n\n/// @param links e.g. [ [ 'Twitter', 'https://twitter.com/enndsz' ],[ 'GitHub', 'https://github.com/ryansea' ] ]\nasync function createPhase(address, username, avatar, banner, bio, links) {\n  try {\n    // Get address of phase for user (should be zero address)\n    let profile_address = await phase.phase(address)\n\n    //  Require profile_address == zero address\n    if (profile_address !== ethers.constants.AddressZero) {\n      return 'Phase Already Made!'\n    }\n\n    // Create profile\n    let tx = await phase.createProfile(\n      address,\n      username,\n      avatar,\n      banner,\n      bio,\n      links,\n    )\n\n    return tx\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexports.createPhase = createPhase\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAYC,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAM;EAAEC;AAAF,IAAaD,OAAO,CAAC,QAAD,CAA1B,C,CAEA;;;AACA,IAAIE,QAAQ,GAAG,MAAf;AACA,IAAIC,MAAM,GACR,kGADF;AAEA,IAAIC,MAAM,GACR,4EADF;AAEA,IAAIC,GAAG,GAAG,gBAAV;AACA,IAAIC,KAAK,GAAG,CACV,CAAC,SAAD,EAAY,qBAAZ,CADU,EAEV,CAAC,QAAD,EAAW,4BAAX,CAFU,CAAZ,C,CAKA;;AACA,eAAeC,WAAf,CAA2BC,OAA3B,EAAoCN,QAApC,EAA8CC,MAA9C,EAAsDC,MAAtD,EAA8DC,GAA9D,EAAmEC,KAAnE,EAA0E;EACxE,IAAI;IACF;IACA,IAAIG,eAAe,GAAG,MAAMV,KAAK,CAACA,KAAN,CAAYS,OAAZ,CAA5B,CAFE,CAIF;;IACA,IAAIC,eAAe,KAAKR,MAAM,CAACS,SAAP,CAAiBC,WAAzC,EAAsD;MACpD,OAAO,qBAAP;IACD,CAPC,CASF;;;IACA,IAAIC,EAAE,GAAG,MAAMb,KAAK,CAACc,aAAN,CACbL,OADa,EAEbN,QAFa,EAGbC,MAHa,EAIbC,MAJa,EAKbC,GALa,EAMbC,KANa,CAAf;IASA,OAAOM,EAAP;EACD,CApBD,CAoBE,OAAOE,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF;;AAEDG,OAAO,CAACV,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"module"}